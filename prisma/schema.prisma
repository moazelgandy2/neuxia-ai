// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}


model UserApiLimit {
  id        String   @id @default(cuid())
  userId    String   @unique
  count     Int      @default(0)
  maxCount  Int      @default(5)
  imageGen  ImageGen[]
  voices    Voices[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model userSubscription {
  id                      String   @id @default(cuid())
  userId                  String   @unique
  stripeCustomerId        String? @unique @map(name:"stripe_customer_id")
  stripeSubscriptionId    String? @unique @map(name:"stripe_subscription_id")
  stripePriceId           String? @unique @map(name:"stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name:"stripe_current_period_end")
}

model Voices {
  id        String   @id @default(cuid())
  userId    String
  user      UserApiLimit @relation(fields: [userId], references: [id])
  voice     String
  prompt    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId], name: "userId")
}

model ImageGen {
  id         String   @id @default(cuid())
  userId     String
  user       UserApiLimit @relation(fields: [userId], references: [id])
  image      String
  prompt     String
  resolution String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@index([userId], name: "userId")
}
